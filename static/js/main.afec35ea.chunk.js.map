{"version":3,"sources":["components/Navigation/SignedInLinks.js","components/Navigation/SignedOutLink.js","components/Navigation/Navbar.js","components/Auth/SignIn.js","components/Dashboard/Notification.js","components/Projects/ProjectSummary.js","components/Projects/ProjectList.js","components/Dashboard/Dashboard.js","components/Projects/ProjectDetails.js","components/Auth/SignUp.js","components/Projects/CreateProject.js","container/Main.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducers.js","index.js"],"names":["SignedInLink","className","to","SignedOutLink","Navbar","SignIn","state","email","password","handleChange","e","setState","target","id","value","onSubmit","console","log","preventDefault","this","htmlFor","type","onChange","Component","Notifaction","ProjectSummary","project","title","ProjectList","projects","map","key","Dashboard","props","connect","ProjectDetails","match","params","SignUp","firstName","lastName","CreateProject","content","Main","path","exact","component","App","Boolean","window","location","hostname","initialState","authReducer","projectReducer","rootReducers","combineReducers","auth","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.afec35ea.chunk.js","sourcesContent":["import  React  from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedInLink = () => {\r\n       return (\r\n         <ul className=\"right\">\r\n             <li><NavLink to='/create'>New Project</NavLink></li>\r\n              <li><NavLink to='/signout'>Log Out</NavLink></li>\r\n              <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">NN</NavLink></li>\r\n             \r\n         </ul>\r\n    );\r\n}\r\n\r\nexport default SignedInLink;","import  React  from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLink = () => {\r\n       return (\r\n         <ul className=\"right\">\r\n             <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n              <li><NavLink to='/login'>Log In</NavLink></li>\r\n         </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLink;","import  React  from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport SignedInLink from \"./SignedInLinks\";\r\nimport SignedOutLink from \"./SignedOutLink\";\r\n\r\nconst Navbar = () => {\r\n       return (\r\n       <nav className=\"nav-wrapper grey darken-3\">\r\n           <div className=\"container\">\r\n               \r\n               <SignedInLink />\r\n               <SignedOutLink />\r\n\r\n           </div>\r\n       </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n       email    : '',\r\n       password : ''\r\n    }\r\n\r\n    handleChange =(e) => {\r\n        this.setState({\r\n          [e.target.id]:[e.target.value]\r\n         })\r\n    }\r\n\r\n    onSubmit =(e) => {\r\n        console.log('sahil');\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nconst Notifaction = () => {\r\n    return(\r\n        <div>\r\n            <p>Notifaction</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifaction;","import React from 'react';\r\n\r\nconst ProjectSummary =({project}) => {\r\n    return(\r\n       \r\n           <div className=\"card z-depth-0 project-summary\">\r\n              <div className=\"card-content grey-text text-darken-3\">\r\n                 <span className=\"card-title\">{project.title}</span>\r\n                   <p>Posted By sahil desai</p>\r\n                   <p className=\"grey-text\">12th June 2020</p>\r\n              </div>\r\n           </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n          {  projects && projects.map(project =>{\r\n              return (\r\n                <ProjectSummary project={project} key={project.id} />\r\n              )\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifaction from './Notification';\r\nimport ProjectList from '../Projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    render() {\r\n        const {projects} = this.props;\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    <div>\r\n                        <div className=\"col s12 m5 offset-m1\">\r\n                            <Notifaction />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps =(state) =>{\r\n   return{\r\n       projects : state.project.projects\r\n   }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps)(Dashboard);\r\n","import React from 'react'\r\n\r\nconst ProjectDetails =(props) => {\r\n    const id= props.match.params.id;\r\n    return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Project Title :- {id}</span>\r\n                    <p>Sahil Desai</p>\r\n                </div>\r\n                <div className=\"card-action gret lighten-4 grey-text\">\r\n                    <div>Posted by sahil desai</div>\r\n                    <p>30 sep 2020</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails\r\n","import React, { Component } from 'react';\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n       email    : '',\r\n       password : '',\r\n       firstName: '',\r\n       lastName : ''\r\n    }\r\n\r\n    handleChange =(e) => {\r\n        this.setState({\r\n          [e.target.id]:[e.target.value]\r\n         })\r\n    }\r\n\r\n    onSubmit =(e) => {\r\n        console.log('sahil');\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"fName\">First Name</label>\r\n                        <input type=\"text\" id=\"fName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n       title    : '',\r\n       content  : ''\r\n    }\r\n\r\n    handleChange =(e) => {\r\n        this.setState({\r\n          [e.target.id]:[e.target.value]\r\n         })\r\n    }\r\n\r\n    onSubmit =(e) => {\r\n        console.log('sahil');\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateProject;\r\n","import React, { Component } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Navbar from '../components/Navigation/Navbar';\r\nimport SignIn from '../components/Auth/SignIn';\r\nimport Dashboard from '../components/Dashboard/Dashboard';\r\nimport ProjectDetails from '../components/Projects/ProjectDetails';\r\nimport SignUp from '../components/Auth/SignUp';\r\nimport CreateProject from '../components/Projects/CreateProject';\r\n\r\nclass Main extends Component {\r\n  render(){\r\n    return (\r\n          <div>\r\n             <Navbar />\r\n             <Route path=\"/login\" exact component={SignIn} />\r\n             <Route path=\"/dashboard\" exact component={Dashboard} />\r\n             <Route path=\"/projects/:id\" exact component={ProjectDetails} />\r\n             <Route path=\"/signup\" exact  component={SignUp} />\r\n             <Route path=\"/create\" exact  component={CreateProject} />\r\n          </div>\r\n       \r\n     );\r\n   }\r\n }\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Main from './container/Main';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n          <div>\n              <Main />\n          </div>\n       </Router>\n     );\n   }\n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\r\n\r\nconst authReducer =(state=initialState,action)=>{\r\n    return state;\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    projects : [\r\n        {id:1 , title :'Java     Project' , content : 'Basics Of Java'},\r\n        {id:2 , title :'React    Project' , content : 'Basics Of React'},\r\n        {id:3 , title :'Angular  Project' , content : 'Basics Of Angular'}\r\n    ]\r\n};\r\n\r\nconst projectReducer =(state=initialState,action)=>{\r\n    return state;\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducers = combineReducers ({\r\n    auth : authReducer ,\r\n    project : projectReducer\r\n});\r\n\r\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducers from './store/reducers/rootReducers';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(rootReducers);\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n            <App />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}